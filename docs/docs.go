// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.ReturnToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "Register",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/exercise": {
            "get": {
                "description": "Get all exercises",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exercises"
                ],
                "summary": "Get all exercises",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/exercise.Exercise"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Create an exercise",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exercises"
                ],
                "summary": "Create an exercise",
                "parameters": [
                    {
                        "description": "Create Exercise",
                        "name": "exercise",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/exercise.CreateExerciseDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/exercise.Exercise"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/exercise/many": {
            "post": {
                "description": "Create many exercises",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exercises"
                ],
                "summary": "Create many exercises",
                "parameters": [
                    {
                        "description": "Create Exercises",
                        "name": "exercises",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/exercise.CreateExerciseDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/exercise.Exercise"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/exercise/type/{type}": {
            "get": {
                "description": "Get exercises by type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exercises"
                ],
                "summary": "Get exercises by type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exercise Type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/exercise.Exercise"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/exercise/{id}": {
            "get": {
                "description": "Get an exercise",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exercises"
                ],
                "summary": "Get an exercise",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exercise ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/exercise.Exercise"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "put": {
                "description": "Update an exercise",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exercises"
                ],
                "summary": "Update an exercise",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exercise ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Exercise",
                        "name": "exercise",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/exercise.UpdateExerciseDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/exercise.Exercise"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Delete an exercise",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exercises"
                ],
                "summary": "Delete an exercise",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exercise ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/foodlog": {
            "post": {
                "description": "Create a food log",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foodlog"
                ],
                "summary": "Create a food log",
                "parameters": [
                    {
                        "description": "Food log object that needs to be created",
                        "name": "foodlog",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/foodlog.CreateFoodLogDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/foodlog.FoodLog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/foodlog/user": {
            "get": {
                "description": "Get a food log by user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foodlog"
                ],
                "summary": "Get a food log by user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/foodlog.FoodLog"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/foodlog/user/{date}": {
            "get": {
                "description": "Get a food log by user and date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foodlog"
                ],
                "summary": "Get a food log by user and date",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Date",
                        "name": "date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/foodlog.FoodLog"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/foodlog/{id}": {
            "get": {
                "description": "Get a food log",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foodlog"
                ],
                "summary": "Get a food log",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Food log ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/foodlog.FoodLog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "put": {
                "description": "Update a food log",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foodlog"
                ],
                "summary": "Update a food log",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Food log ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/foodlog.FoodLog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Delete a food log",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foodlog"
                ],
                "summary": "Delete a food log",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Food log ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/ingredient": {
            "get": {
                "description": "Get all ingredients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ingredient"
                ],
                "summary": "Get all ingredients",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ingredient.Ingredient"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Create new ingredient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ingredient"
                ],
                "summary": "Create new ingredient",
                "parameters": [
                    {
                        "description": "Ingredient object that needs to be created",
                        "name": "ingredient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ingredient.CreateIngredientDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ingredient.Ingredient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/ingredient/search": {
            "get": {
                "description": "Search ingredients with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ingredient"
                ],
                "summary": "Search and filter ingredients",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category filter",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum calories",
                        "name": "minCalories",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum calories",
                        "name": "maxCalories",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Nutrients filter (comma-separated)",
                        "name": "nutrients",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ingredient.Ingredient"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/ingredient/user": {
            "get": {
                "description": "Get ingredients by user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ingredient"
                ],
                "summary": "Get ingredients by user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ingredient.Ingredient"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/ingredient/{id}": {
            "get": {
                "description": "Get an ingredient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ingredient"
                ],
                "summary": "Get an ingredient",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ingredient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ingredient.Ingredient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "put": {
                "description": "Update an ingredient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ingredient"
                ],
                "summary": "Update an ingredient",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ingredient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Ingredient object that needs to be updated",
                        "name": "ingredient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ingredient.UpdateIngredientDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ingredient.Ingredient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Delete an ingredient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ingredient"
                ],
                "summary": "Delete an ingredient",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ingredient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/me": {
            "get": {
                "description": "Get a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/meal": {
            "get": {
                "description": "Get all meals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meals"
                ],
                "summary": "Get all meals",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/meal.Meal"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Create a meal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meals"
                ],
                "summary": "Create a meal",
                "parameters": [
                    {
                        "description": "Create Meal",
                        "name": "meal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/meal.CreateMealDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/meal.Meal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/meal/search": {
            "get": {
                "description": "Search meals with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meals"
                ],
                "summary": "Search and filter meals",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category filter",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum calories",
                        "name": "minCalories",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum calories",
                        "name": "maxCalories",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Nutrients filter (comma-separated)",
                        "name": "nutrients",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/meal.Meal"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/meal/user/{userid}": {
            "get": {
                "description": "Get meals by user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meals"
                ],
                "summary": "Get meals by user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/meal.Meal"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/meal/{id}": {
            "get": {
                "description": "Get a meal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meals"
                ],
                "summary": "Get a meal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Meal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meal.Meal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "put": {
                "description": "Update a meal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meals"
                ],
                "summary": "Update a meal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Meal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Meal",
                        "name": "meal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/meal.UpdateMealDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meal.Meal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Delete a meal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meals"
                ],
                "summary": "Delete a meal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Meal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/plan": {
            "get": {
                "description": "Get all plans",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "summary": "Get all plans",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/plans.Plan"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Create a plan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "summary": "Create a plan",
                "parameters": [
                    {
                        "description": "Create Plan",
                        "name": "plan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/plans.CreatePlanDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/plans.Plan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/plan/user/{user_id}": {
            "get": {
                "description": "Get a plan by user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "summary": "Get a plan by user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/plans.Plan"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/plan/user/{user_id}/{day}": {
            "get": {
                "description": "Get a plan by user and day",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "summary": "Get a plan by user and day",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Day of week",
                        "name": "day",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/plans.Plan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Delete a plan by user and day",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "summary": "Delete a plan by user and day",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Day of week",
                        "name": "day",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/plan/{id}": {
            "get": {
                "description": "Get a plan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "summary": "Get a plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/plans.Plan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "put": {
                "description": "Update a plan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "summary": "Update a plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Plan",
                        "name": "plan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/plans.UpdatePlanDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/plans.Plan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Delete a plan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "summary": "Delete a plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/plan/{user_id}/{day}": {
            "put": {
                "description": "Update a plan by user and day",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "summary": "Update a plan by user and day",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Day of week",
                        "name": "day",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Plan",
                        "name": "plan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/plans.UpdatePlanDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/plans.Plan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "Get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Create a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "Create User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/user/body": {
            "patch": {
                "description": "Update a user body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user body",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateBody User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateBodyDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/user/energyplan": {
            "get": {
                "description": "Get a user energy consume plan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user energy consume plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/function.EnergyConsumptionPlan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/user/me": {
            "delete": {
                "description": "Delete a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/user/usepass": {
            "patch": {
                "description": "Update a user username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user username and password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateUsernamePassword User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpadateUsernamePasswordDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginDto": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterDto": {
            "type": "object",
            "required": [
                "age",
                "email",
                "gender",
                "password",
                "username"
            ],
            "properties": {
                "age": {
                    "type": "integer",
                    "maximum": 120,
                    "minimum": 1
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "oauth_id": {
                    "type": "string"
                },
                "oauth_provider": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                }
            }
        },
        "auth.ReturnToken": {
            "type": "object",
            "properties": {
                "exp": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "exercise.CreateExerciseDto": {
            "type": "object",
            "required": [
                "description",
                "image",
                "muscle",
                "name",
                "type"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "muscle": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "exercise.Exercise": {
            "type": "object",
            "required": [
                "description",
                "image",
                "muscle",
                "name",
                "type"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "muscle": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "exercise.UpdateExerciseDto": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "muscle": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "foodlog.CreateFoodLogDto": {
            "type": "object",
            "required": [
                "date"
            ],
            "properties": {
                "date": {
                    "type": "string"
                },
                "meals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "foodlog.FoodLog": {
            "type": "object",
            "required": [
                "datetime",
                "userid"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "datetime": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "meals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "function.CalPerActivity": {
            "type": "object",
            "properties": {
                "activityName": {
                    "type": "string"
                },
                "calories": {
                    "type": "number"
                }
            }
        },
        "function.EnergyConsumptionPlan": {
            "type": "object",
            "properties": {
                "activityLevel": {
                    "type": "string"
                },
                "allActivityCaloriesPerDay": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/function.CalPerActivity"
                    }
                },
                "bmr": {
                    "type": "number"
                },
                "macronutrients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/function.Macronutrients"
                    }
                }
            }
        },
        "function.Macronutrients": {
            "type": "object",
            "properties": {
                "calories": {
                    "type": "number"
                },
                "carbPreference": {
                    "type": "string"
                },
                "carbs": {
                    "type": "number"
                },
                "fat": {
                    "type": "number"
                },
                "goal": {
                    "type": "string"
                },
                "protein": {
                    "type": "number"
                }
            }
        },
        "ingredient.CreateIngredientDto": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "calories": {
                    "type": "number",
                    "default": 0
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string",
                    "default": "null"
                },
                "name": {
                    "type": "string"
                },
                "nutrients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Nutrient"
                    }
                }
            }
        },
        "ingredient.Ingredient": {
            "type": "object",
            "required": [
                "name",
                "userid"
            ],
            "properties": {
                "calories": {
                    "type": "number",
                    "default": 0
                },
                "category": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string",
                    "default": "null"
                },
                "name": {
                    "type": "string"
                },
                "nutrients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Nutrient"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "ingredient.UpdateIngredientDto": {
            "type": "object",
            "properties": {
                "calories": {
                    "type": "number"
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nutrients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Nutrient"
                    }
                }
            }
        },
        "meal.CreateMealDto": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "calories": {
                    "type": "number"
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Ingredient"
                    }
                },
                "name": {
                    "type": "string"
                },
                "nutrients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Nutrient"
                    }
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "meal.Meal": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "brandName": {
                    "type": "string"
                },
                "brandOwner": {
                    "type": "string"
                },
                "calories": {
                    "type": "number",
                    "default": 0
                },
                "category": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "default": "null"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string",
                    "default": "null"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Ingredient"
                    }
                },
                "name": {
                    "type": "string"
                },
                "nutrients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Nutrient"
                    }
                },
                "servingSize": {
                    "type": "number"
                },
                "servingSizeUnit": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "default": "null"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "meal.UpdateMealDto": {
            "type": "object",
            "properties": {
                "calories": {
                    "type": "number"
                },
                "carb": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "fat": {
                    "type": "number"
                },
                "protein": {
                    "type": "number"
                }
            }
        },
        "plans.CreatePlanDto": {
            "type": "object",
            "required": [
                "dayofweek",
                "userid"
            ],
            "properties": {
                "dayofweek": {
                    "type": "string"
                },
                "exercise": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "typeofplan": {
                    "type": "string",
                    "default": "Rest"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "plans.Plan": {
            "type": "object",
            "required": [
                "dayofweek",
                "typeofplan",
                "userid"
            ],
            "properties": {
                "dayofweek": {
                    "type": "string"
                },
                "exercise": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "typeofplan": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "plans.UpdatePlanDto": {
            "type": "object",
            "properties": {
                "exercise": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "typeofplan": {
                    "type": "string"
                }
            }
        },
        "types.Ingredient": {
            "type": "object",
            "required": [
                "ingredientid",
                "name",
                "numofservings",
                "unit",
                "value"
            ],
            "properties": {
                "ingredientid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "numofservings": {
                    "type": "number"
                },
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "types.Nutrient": {
            "type": "object",
            "required": [
                "amount",
                "name",
                "unit"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "user.CreateUserDto": {
            "type": "object",
            "required": [
                "age",
                "email",
                "gender",
                "password",
                "username"
            ],
            "properties": {
                "activityLevel": {
                    "description": "default:\"0\" is not working",
                    "type": "integer",
                    "default": 0
                },
                "age": {
                    "type": "integer",
                    "maximum": 120,
                    "minimum": 1
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "height": {
                    "description": "default:\"0\" is not working",
                    "type": "number",
                    "default": 0
                },
                "hip": {
                    "description": "default:\"0\" is not working",
                    "type": "number",
                    "default": 0
                },
                "neck": {
                    "description": "default:\"0\" is not working",
                    "type": "number",
                    "default": 0
                },
                "oauth_id": {
                    "type": "string"
                },
                "oauth_provider": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                },
                "waist": {
                    "description": "default:\"0\" is not working",
                    "type": "number",
                    "default": 0
                },
                "weight": {
                    "description": "default:\"0\" is not working",
                    "type": "number",
                    "default": 0
                }
            }
        },
        "user.UpadateUsernamePasswordDto": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.UpdateBodyDto": {
            "type": "object",
            "properties": {
                "activityLevel": {
                    "type": "integer"
                },
                "age": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "hip": {
                    "type": "number"
                },
                "neck": {
                    "type": "number"
                },
                "waist": {
                    "type": "number"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "user.User": {
            "type": "object",
            "required": [
                "age",
                "email",
                "gender",
                "password",
                "username"
            ],
            "properties": {
                "activitylevel": {
                    "description": "default:\"0\" is not working",
                    "type": "integer",
                    "default": 0
                },
                "age": {
                    "type": "integer",
                    "maximum": 120,
                    "minimum": 1
                },
                "created_at": {
                    "type": "string",
                    "default": "null"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "goal": {
                    "type": "string",
                    "default": "maintain"
                },
                "height": {
                    "description": "default:\"0\" is not working",
                    "type": "number",
                    "default": 0
                },
                "hip": {
                    "description": "default:\"0\" is not working",
                    "type": "number",
                    "default": 0
                },
                "id": {
                    "type": "string"
                },
                "neck": {
                    "description": "default:\"0\" is not working",
                    "type": "number",
                    "default": 0
                },
                "oauth_id": {
                    "type": "string"
                },
                "oauth_provider": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "default": "null"
                },
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                },
                "waist": {
                    "description": "default:\"0\" is not working",
                    "type": "number",
                    "default": 0
                },
                "weight": {
                    "description": "default:\"0\" is not working",
                    "type": "number",
                    "default": 0
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Enter your bearer token in the format: Bearer {token}",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "security": [
        {
            "Bearer": []
        },
        {
            "cookieAuth": []
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "GymsBro API",
	Description:      "This is a sample server for GymsBro API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
